% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/07_meta.R
\name{execute_processing_chain_by_hash}
\alias{execute_processing_chain_by_hash}
\title{Execute a processing chain and wait for results by hash}
\usage{
execute_processing_chain_by_hash(
  config,
  file_hash,
  method_chain,
  timeout = 600,
  interval = 5,
  parse_json = TRUE
)
}
\arguments{
\item{config}{API configuration created by create_api_config}

\item{file_hash}{Hash of the initial content (as returned by hash_content)}

\item{method_chain}{List of method specifications, each with method_name and parameters}

\item{timeout}{Maximum time to wait in seconds (default: 600)}

\item{interval}{Polling interval in seconds (default: 5)}

\item{parse_json}{Whether to parse the final output as JSON (default: TRUE)}
}
\value{
The final output of the processing chain
}
\description{
This is a convenience function that submits a meta-job using a pre-computed hash
and waits for the results in one call. Use this when you've already uploaded
the content and have its hash.
}
\examples{
\dontrun{
config <- create_api_config("http://localhost", 9000, "please_change_me")

# Upload content and get hash
content <- readRDS("lung_image.rds")
file_hash <- hash_content(content)
upload_file(config, content, "lung_image.rds")

# Define processing chain
chain <- list(
  list(
    method_name = "lung_mask",
    parameters = list()
  ),
  list(
    method_name = "extract_radiomics",
    parameters = list(feature_set = "all")
  )
)

# Execute using hash directly
results <- execute_processing_chain_by_hash(config, file_hash, chain)
}
}
